// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#include "packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_packet_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_packet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_packet_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RoomUser;
}  // namespace protobuf_packet_2eproto
namespace packet {
class Vector3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3>
      _instance;
} _Vector3_default_instance_;
class RoomUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomUser>
      _instance;
} _RoomUser_default_instance_;
class ErrorAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorAck>
      _instance;
} _ErrorAck_default_instance_;
class ConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Connect>
      _instance;
} _Connect_default_instance_;
class DisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Disconnect>
      _instance;
} _Disconnect_default_instance_;
class LoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginReq>
      _instance;
} _LoginReq_default_instance_;
class LoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginAck>
      _instance;
} _LoginAck_default_instance_;
class EnterNewUserAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterNewUserAck>
      _instance;
} _EnterNewUserAck_default_instance_;
class MoveReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveReq>
      _instance;
} _MoveReq_default_instance_;
class MoveAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveAck>
      _instance;
} _MoveAck_default_instance_;
}  // namespace packet
namespace protobuf_packet_2eproto {
static void InitDefaultsVector3() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_Vector3_default_instance_;
    new (ptr) ::packet::Vector3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::Vector3::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector3 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector3}, {}};

static void InitDefaultsRoomUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_RoomUser_default_instance_;
    new (ptr) ::packet::RoomUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::RoomUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RoomUser =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoomUser}, {
      &protobuf_packet_2eproto::scc_info_Vector3.base,}};

static void InitDefaultsErrorAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_ErrorAck_default_instance_;
    new (ptr) ::packet::ErrorAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::ErrorAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorAck}, {}};

static void InitDefaultsConnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_Connect_default_instance_;
    new (ptr) ::packet::Connect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::Connect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Connect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnect}, {}};

static void InitDefaultsDisconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_Disconnect_default_instance_;
    new (ptr) ::packet::Disconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::Disconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Disconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDisconnect}, {}};

static void InitDefaultsLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_LoginReq_default_instance_;
    new (ptr) ::packet::LoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::LoginReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginReq}, {}};

static void InitDefaultsLoginAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_LoginAck_default_instance_;
    new (ptr) ::packet::LoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::LoginAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LoginAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLoginAck}, {
      &protobuf_packet_2eproto::scc_info_RoomUser.base,}};

static void InitDefaultsEnterNewUserAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_EnterNewUserAck_default_instance_;
    new (ptr) ::packet::EnterNewUserAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::EnterNewUserAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnterNewUserAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnterNewUserAck}, {
      &protobuf_packet_2eproto::scc_info_RoomUser.base,}};

static void InitDefaultsMoveReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_MoveReq_default_instance_;
    new (ptr) ::packet::MoveReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::MoveReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoveReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoveReq}, {
      &protobuf_packet_2eproto::scc_info_Vector3.base,}};

static void InitDefaultsMoveAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_MoveAck_default_instance_;
    new (ptr) ::packet::MoveAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::MoveAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoveAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoveAck}, {
      &protobuf_packet_2eproto::scc_info_Vector3.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Vector3.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoomUser.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Connect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Disconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnterNewUserAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveAck.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Vector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Vector3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Vector3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Vector3, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomUser, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomUser, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::ErrorAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::ErrorAck, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Connect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Connect, network_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Disconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Disconnect, network_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginReq, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginReq, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginAck, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginAck, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginAck, users_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterNewUserAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterNewUserAck, new_user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterNewUserAck, new_user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveReq, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveAck, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveAck, position_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::packet::Vector3)},
  { 8, -1, sizeof(::packet::RoomUser)},
  { 15, -1, sizeof(::packet::ErrorAck)},
  { 21, -1, sizeof(::packet::Connect)},
  { 27, -1, sizeof(::packet::Disconnect)},
  { 33, -1, sizeof(::packet::LoginReq)},
  { 40, -1, sizeof(::packet::LoginAck)},
  { 48, -1, sizeof(::packet::EnterNewUserAck)},
  { 55, -1, sizeof(::packet::MoveReq)},
  { 61, -1, sizeof(::packet::MoveAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_Vector3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_RoomUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_ErrorAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_Connect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_Disconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_LoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_LoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_EnterNewUserAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_MoveReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_MoveAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "packet.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014packet.proto\022\006packet\"*\n\007Vector3\022\t\n\001x\030\001"
      " \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"A\n\010RoomUser\022\022"
      "\n\nnetwork_id\030\001 \001(\003\022!\n\010position\030\002 \001(\0132\017.p"
      "acket.Vector3\"&\n\010ErrorAck\022\032\n\004type\030\001 \001(\0162"
      "\014.packet.Type\"\035\n\007Connect\022\022\n\nnetwork_id\030\001"
      " \001(\003\" \n\nDisconnect\022\022\n\nnetwork_id\030\001 \001(\003\","
      "\n\010LoginReq\022\022\n\nnetwork_id\030\001 \001(\003\022\014\n\004name\030\002"
      " \001(\t\"M\n\010LoginAck\022\022\n\nnetwork_id\030\001 \001(\003\022\014\n\004"
      "name\030\002 \001(\t\022\037\n\005users\030\003 \003(\0132\020.packet.RoomU"
      "ser\"L\n\017EnterNewUserAck\022\025\n\rnew_user_name\030"
      "\001 \001(\t\022\"\n\010new_user\030\002 \001(\0132\020.packet.RoomUse"
      "r\",\n\007MoveReq\022!\n\010position\030\001 \001(\0132\017.packet."
      "Vector3\"@\n\007MoveAck\022\022\n\nnetwork_id\030\001 \001(\003\022!"
      "\n\010position\030\002 \001(\0132\017.packet.Vector3*\216\001\n\004Ty"
      "pe\022\010\n\004NONE\020\000\022\013\n\007CONNECT\020\002\022\016\n\nDISCONNECT\020"
      "\003\022\r\n\tERROR_ACK\020\004\022\r\n\tLOGIN_REQ\020d\022\r\n\tLOGIN"
      "_ACK\020e\022\026\n\022ENTER_NEW_USER_ACK\020g\022\014\n\010MOVE_R"
      "EQ\020i\022\014\n\010MOVE_ACK\020jb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 706);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "packet.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_packet_2eproto
namespace packet {
const ::google::protobuf::EnumDescriptor* Type_descriptor() {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_packet_2eproto::file_level_enum_descriptors[0];
}
bool Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 100:
    case 101:
    case 103:
    case 105:
    case 106:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Vector3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3::kXFieldNumber;
const int Vector3::kYFieldNumber;
const int Vector3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3::Vector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_Vector3.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.Vector3)
}
Vector3::Vector3(const Vector3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:packet.Vector3)
}

void Vector3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:packet.Vector3)
  SharedDtor();
}

void Vector3::SharedDtor() {
}

void Vector3::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector3::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3& Vector3::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_Vector3.base);
  return *internal_default_instance();
}


void Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.Vector3)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.Vector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.Vector3)
  return false;
#undef DO_
}

void Vector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.Vector3)
}

::google::protobuf::uint8* Vector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Vector3)
  return target;
}

size_t Vector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Vector3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.Vector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.Vector3)
    MergeFrom(*source);
  }
}

void Vector3::MergeFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3::CopyFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3::IsInitialized() const {
  return true;
}

void Vector3::Swap(Vector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3::InternalSwap(Vector3* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoomUser::InitAsDefaultInstance() {
  ::packet::_RoomUser_default_instance_._instance.get_mutable()->position_ = const_cast< ::packet::Vector3*>(
      ::packet::Vector3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomUser::kNetworkIdFieldNumber;
const int RoomUser::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomUser::RoomUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_RoomUser.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.RoomUser)
}
RoomUser::RoomUser(const RoomUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::packet::Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.RoomUser)
}

void RoomUser::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(network_id_));
}

RoomUser::~RoomUser() {
  // @@protoc_insertion_point(destructor:packet.RoomUser)
  SharedDtor();
}

void RoomUser::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void RoomUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoomUser::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomUser& RoomUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_RoomUser.base);
  return *internal_default_instance();
}


void RoomUser::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.RoomUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool RoomUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.RoomUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .packet.Vector3 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.RoomUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.RoomUser)
  return false;
#undef DO_
}

void RoomUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.RoomUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.RoomUser)
}

::google::protobuf::uint8* RoomUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.RoomUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.RoomUser)
  return target;
}

size_t RoomUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.RoomUser)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoomUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.RoomUser)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.RoomUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.RoomUser)
    MergeFrom(*source);
  }
}

void RoomUser::MergeFrom(const RoomUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.RoomUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::packet::Vector3::MergeFrom(from.position());
  }
  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void RoomUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.RoomUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomUser::CopyFrom(const RoomUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.RoomUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomUser::IsInitialized() const {
  return true;
}

void RoomUser::Swap(RoomUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomUser::InternalSwap(RoomUser* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoomUser::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ErrorAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorAck::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorAck::ErrorAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_ErrorAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.ErrorAck)
}
ErrorAck::ErrorAck(const ErrorAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:packet.ErrorAck)
}

void ErrorAck::SharedCtor() {
  type_ = 0;
}

ErrorAck::~ErrorAck() {
  // @@protoc_insertion_point(destructor:packet.ErrorAck)
  SharedDtor();
}

void ErrorAck::SharedDtor() {
}

void ErrorAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorAck& ErrorAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_ErrorAck.base);
  return *internal_default_instance();
}


void ErrorAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.ErrorAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

bool ErrorAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.ErrorAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .packet.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::packet::Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.ErrorAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.ErrorAck)
  return false;
#undef DO_
}

void ErrorAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.ErrorAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.ErrorAck)
}

::google::protobuf::uint8* ErrorAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.ErrorAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.ErrorAck)
  return target;
}

size_t ErrorAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.ErrorAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.ErrorAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.ErrorAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.ErrorAck)
    MergeFrom(*source);
  }
}

void ErrorAck::MergeFrom(const ErrorAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.ErrorAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ErrorAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.ErrorAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorAck::CopyFrom(const ErrorAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.ErrorAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorAck::IsInitialized() const {
  return true;
}

void ErrorAck::Swap(ErrorAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorAck::InternalSwap(ErrorAck* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Connect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Connect::kNetworkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Connect::Connect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_Connect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.Connect)
}
Connect::Connect(const Connect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.Connect)
}

void Connect::SharedCtor() {
  network_id_ = GOOGLE_LONGLONG(0);
}

Connect::~Connect() {
  // @@protoc_insertion_point(destructor:packet.Connect)
  SharedDtor();
}

void Connect::SharedDtor() {
}

void Connect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Connect::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Connect& Connect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_Connect.base);
  return *internal_default_instance();
}


void Connect::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Connect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.Connect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.Connect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.Connect)
  return false;
#undef DO_
}

void Connect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.Connect)
}

::google::protobuf::uint8* Connect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Connect)
  return target;
}

size_t Connect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Connect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Connect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.Connect)
  GOOGLE_DCHECK_NE(&from, this);
  const Connect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Connect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.Connect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.Connect)
    MergeFrom(*source);
  }
}

void Connect::MergeFrom(const Connect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Connect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void Connect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Connect::CopyFrom(const Connect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Connect::IsInitialized() const {
  return true;
}

void Connect::Swap(Connect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Connect::InternalSwap(Connect* other) {
  using std::swap;
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Connect::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Disconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Disconnect::kNetworkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Disconnect::Disconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_Disconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.Disconnect)
}
Disconnect::Disconnect(const Disconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.Disconnect)
}

void Disconnect::SharedCtor() {
  network_id_ = GOOGLE_LONGLONG(0);
}

Disconnect::~Disconnect() {
  // @@protoc_insertion_point(destructor:packet.Disconnect)
  SharedDtor();
}

void Disconnect::SharedDtor() {
}

void Disconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Disconnect::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Disconnect& Disconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_Disconnect.base);
  return *internal_default_instance();
}


void Disconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Disconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.Disconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.Disconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.Disconnect)
  return false;
#undef DO_
}

void Disconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.Disconnect)
}

::google::protobuf::uint8* Disconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Disconnect)
  return target;
}

size_t Disconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Disconnect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Disconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const Disconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Disconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.Disconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.Disconnect)
    MergeFrom(*source);
  }
}

void Disconnect::MergeFrom(const Disconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void Disconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Disconnect::CopyFrom(const Disconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Disconnect::IsInitialized() const {
  return true;
}

void Disconnect::Swap(Disconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Disconnect::InternalSwap(Disconnect* other) {
  using std::swap;
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Disconnect::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kNetworkIdFieldNumber;
const int LoginReq::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_LoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.LoginReq)
}
LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.LoginReq)
}

void LoginReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_id_ = GOOGLE_LONGLONG(0);
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:packet.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReq& LoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_LoginReq.base);
  return *internal_default_instance();
}


void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.LoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.LoginReq.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.LoginReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.LoginReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.LoginReq)
  return target;
}

size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.LoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginAck::kNetworkIdFieldNumber;
const int LoginAck::kNameFieldNumber;
const int LoginAck::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginAck::LoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_LoginAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.LoginAck)
}
LoginAck::LoginAck(const LoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.LoginAck)
}

void LoginAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_id_ = GOOGLE_LONGLONG(0);
}

LoginAck::~LoginAck() {
  // @@protoc_insertion_point(destructor:packet.LoginAck)
  SharedDtor();
}

void LoginAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginAck& LoginAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_LoginAck.base);
  return *internal_default_instance();
}


void LoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.LoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.LoginAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.LoginAck.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .packet.RoomUser users = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.LoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.LoginAck)
  return false;
#undef DO_
}

void LoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.LoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.LoginAck.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .packet.RoomUser users = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->users(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.LoginAck)
}

::google::protobuf::uint8* LoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.LoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.LoginAck.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .packet.RoomUser users = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->users(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.LoginAck)
  return target;
}

size_t LoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.LoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .packet.RoomUser users = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.LoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.LoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.LoginAck)
    MergeFrom(*source);
  }
}

void LoginAck::MergeFrom(const LoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.LoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void LoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.LoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginAck::CopyFrom(const LoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.LoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginAck::IsInitialized() const {
  return true;
}

void LoginAck::Swap(LoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginAck::InternalSwap(LoginAck* other) {
  using std::swap;
  CastToBase(&users_)->InternalSwap(CastToBase(&other->users_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterNewUserAck::InitAsDefaultInstance() {
  ::packet::_EnterNewUserAck_default_instance_._instance.get_mutable()->new_user_ = const_cast< ::packet::RoomUser*>(
      ::packet::RoomUser::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterNewUserAck::kNewUserNameFieldNumber;
const int EnterNewUserAck::kNewUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterNewUserAck::EnterNewUserAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_EnterNewUserAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.EnterNewUserAck)
}
EnterNewUserAck::EnterNewUserAck(const EnterNewUserAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_user_name().size() > 0) {
    new_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_user_name_);
  }
  if (from.has_new_user()) {
    new_user_ = new ::packet::RoomUser(*from.new_user_);
  } else {
    new_user_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:packet.EnterNewUserAck)
}

void EnterNewUserAck::SharedCtor() {
  new_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_user_ = NULL;
}

EnterNewUserAck::~EnterNewUserAck() {
  // @@protoc_insertion_point(destructor:packet.EnterNewUserAck)
  SharedDtor();
}

void EnterNewUserAck::SharedDtor() {
  new_user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete new_user_;
}

void EnterNewUserAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnterNewUserAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterNewUserAck& EnterNewUserAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_EnterNewUserAck.base);
  return *internal_default_instance();
}


void EnterNewUserAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.EnterNewUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && new_user_ != NULL) {
    delete new_user_;
  }
  new_user_ = NULL;
  _internal_metadata_.Clear();
}

bool EnterNewUserAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.EnterNewUserAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string new_user_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_user_name().data(), static_cast<int>(this->new_user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.EnterNewUserAck.new_user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .packet.RoomUser new_user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.EnterNewUserAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.EnterNewUserAck)
  return false;
#undef DO_
}

void EnterNewUserAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.EnterNewUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string new_user_name = 1;
  if (this->new_user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_user_name().data(), static_cast<int>(this->new_user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.EnterNewUserAck.new_user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->new_user_name(), output);
  }

  // .packet.RoomUser new_user = 2;
  if (this->has_new_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_new_user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.EnterNewUserAck)
}

::google::protobuf::uint8* EnterNewUserAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.EnterNewUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string new_user_name = 1;
  if (this->new_user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_user_name().data(), static_cast<int>(this->new_user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.EnterNewUserAck.new_user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->new_user_name(), target);
  }

  // .packet.RoomUser new_user = 2;
  if (this->has_new_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_new_user(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.EnterNewUserAck)
  return target;
}

size_t EnterNewUserAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.EnterNewUserAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string new_user_name = 1;
  if (this->new_user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_user_name());
  }

  // .packet.RoomUser new_user = 2;
  if (this->has_new_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *new_user_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnterNewUserAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.EnterNewUserAck)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterNewUserAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterNewUserAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.EnterNewUserAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.EnterNewUserAck)
    MergeFrom(*source);
  }
}

void EnterNewUserAck::MergeFrom(const EnterNewUserAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.EnterNewUserAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_user_name().size() > 0) {

    new_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_user_name_);
  }
  if (from.has_new_user()) {
    mutable_new_user()->::packet::RoomUser::MergeFrom(from.new_user());
  }
}

void EnterNewUserAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.EnterNewUserAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterNewUserAck::CopyFrom(const EnterNewUserAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.EnterNewUserAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterNewUserAck::IsInitialized() const {
  return true;
}

void EnterNewUserAck::Swap(EnterNewUserAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterNewUserAck::InternalSwap(EnterNewUserAck* other) {
  using std::swap;
  new_user_name_.Swap(&other->new_user_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(new_user_, other->new_user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnterNewUserAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveReq::InitAsDefaultInstance() {
  ::packet::_MoveReq_default_instance_._instance.get_mutable()->position_ = const_cast< ::packet::Vector3*>(
      ::packet::Vector3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveReq::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveReq::MoveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_MoveReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.MoveReq)
}
MoveReq::MoveReq(const MoveReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::packet::Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:packet.MoveReq)
}

void MoveReq::SharedCtor() {
  position_ = NULL;
}

MoveReq::~MoveReq() {
  // @@protoc_insertion_point(destructor:packet.MoveReq)
  SharedDtor();
}

void MoveReq::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void MoveReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoveReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveReq& MoveReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_MoveReq.base);
  return *internal_default_instance();
}


void MoveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.MoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  _internal_metadata_.Clear();
}

bool MoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.MoveReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .packet.Vector3 position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.MoveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.MoveReq)
  return false;
#undef DO_
}

void MoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.MoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.Vector3 position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.MoveReq)
}

::google::protobuf::uint8* MoveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.MoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.Vector3 position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.MoveReq)
  return target;
}

size_t MoveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.MoveReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Vector3 position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.MoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.MoveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.MoveReq)
    MergeFrom(*source);
  }
}

void MoveReq::MergeFrom(const MoveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.MoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::packet::Vector3::MergeFrom(from.position());
  }
}

void MoveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.MoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveReq::CopyFrom(const MoveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.MoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveReq::IsInitialized() const {
  return true;
}

void MoveReq::Swap(MoveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveReq::InternalSwap(MoveReq* other) {
  using std::swap;
  swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoveReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveAck::InitAsDefaultInstance() {
  ::packet::_MoveAck_default_instance_._instance.get_mutable()->position_ = const_cast< ::packet::Vector3*>(
      ::packet::Vector3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveAck::kNetworkIdFieldNumber;
const int MoveAck::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveAck::MoveAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_MoveAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.MoveAck)
}
MoveAck::MoveAck(const MoveAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::packet::Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.MoveAck)
}

void MoveAck::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(network_id_));
}

MoveAck::~MoveAck() {
  // @@protoc_insertion_point(destructor:packet.MoveAck)
  SharedDtor();
}

void MoveAck::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void MoveAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoveAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveAck& MoveAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_MoveAck.base);
  return *internal_default_instance();
}


void MoveAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.MoveAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MoveAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.MoveAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .packet.Vector3 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.MoveAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.MoveAck)
  return false;
#undef DO_
}

void MoveAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.MoveAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.MoveAck)
}

::google::protobuf::uint8* MoveAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.MoveAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.MoveAck)
  return target;
}

size_t MoveAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.MoveAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.MoveAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.MoveAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.MoveAck)
    MergeFrom(*source);
  }
}

void MoveAck::MergeFrom(const MoveAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.MoveAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::packet::Vector3::MergeFrom(from.position());
  }
  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void MoveAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.MoveAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveAck::CopyFrom(const MoveAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.MoveAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveAck::IsInitialized() const {
  return true;
}

void MoveAck::Swap(MoveAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveAck::InternalSwap(MoveAck* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoveAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace packet
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::Vector3* Arena::CreateMaybeMessage< ::packet::Vector3 >(Arena* arena) {
  return Arena::CreateInternal< ::packet::Vector3 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::RoomUser* Arena::CreateMaybeMessage< ::packet::RoomUser >(Arena* arena) {
  return Arena::CreateInternal< ::packet::RoomUser >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::ErrorAck* Arena::CreateMaybeMessage< ::packet::ErrorAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::ErrorAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::Connect* Arena::CreateMaybeMessage< ::packet::Connect >(Arena* arena) {
  return Arena::CreateInternal< ::packet::Connect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::Disconnect* Arena::CreateMaybeMessage< ::packet::Disconnect >(Arena* arena) {
  return Arena::CreateInternal< ::packet::Disconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::LoginReq* Arena::CreateMaybeMessage< ::packet::LoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::LoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::LoginAck* Arena::CreateMaybeMessage< ::packet::LoginAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::LoginAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::EnterNewUserAck* Arena::CreateMaybeMessage< ::packet::EnterNewUserAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::EnterNewUserAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::MoveReq* Arena::CreateMaybeMessage< ::packet::MoveReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::MoveReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::MoveAck* Arena::CreateMaybeMessage< ::packet::MoveAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::MoveAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
