// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet.proto

#include "packet.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_packet_5fdata_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_packet_5fdata_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_packet_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Room;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_packet_5fdata_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RoomUser;
}  // namespace protobuf_packet_5fdata_2eproto
namespace packet {
class ErrorAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorAck>
      _instance;
} _ErrorAck_default_instance_;
class ConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Connect>
      _instance;
} _Connect_default_instance_;
class DisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Disconnect>
      _instance;
} _Disconnect_default_instance_;
class EnterRoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterRoom>
      _instance;
} _EnterRoom_default_instance_;
class LoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginReq>
      _instance;
} _LoginReq_default_instance_;
class LoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginAck>
      _instance;
} _LoginAck_default_instance_;
class LogoutAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogoutAck>
      _instance;
} _LogoutAck_default_instance_;
class EnterNewUserAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterNewUserAck>
      _instance;
} _EnterNewUserAck_default_instance_;
class MoveReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveReq>
      _instance;
} _MoveReq_default_instance_;
class MoveAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveAck>
      _instance;
} _MoveAck_default_instance_;
class GetRoomListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRoomListReq>
      _instance;
} _GetRoomListReq_default_instance_;
class GetRoomListAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRoomListAck>
      _instance;
} _GetRoomListAck_default_instance_;
class MakeRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MakeRoomReq>
      _instance;
} _MakeRoomReq_default_instance_;
class MakeRoomAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MakeRoomAck>
      _instance;
} _MakeRoomAck_default_instance_;
class EnterRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomReq>
      _instance;
} _EnterRoomReq_default_instance_;
class EnterRoomAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomAck>
      _instance;
} _EnterRoomAck_default_instance_;
class RenameRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RenameRoomReq>
      _instance;
} _RenameRoomReq_default_instance_;
class MoveRoomUserReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveRoomUserReq>
      _instance;
} _MoveRoomUserReq_default_instance_;
class MoveRoomUserAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoveRoomUserAck>
      _instance;
} _MoveRoomUserAck_default_instance_;
class ExitRoomUserReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExitRoomUserReq>
      _instance;
} _ExitRoomUserReq_default_instance_;
class ExitRoomUserAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExitRoomUserAck>
      _instance;
} _ExitRoomUserAck_default_instance_;
}  // namespace packet
namespace protobuf_packet_2eproto {
static void InitDefaultsErrorAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_ErrorAck_default_instance_;
    new (ptr) ::packet::ErrorAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::ErrorAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorAck}, {}};

static void InitDefaultsConnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_Connect_default_instance_;
    new (ptr) ::packet::Connect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::Connect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Connect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsConnect}, {}};

static void InitDefaultsDisconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_Disconnect_default_instance_;
    new (ptr) ::packet::Disconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::Disconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Disconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDisconnect}, {}};

static void InitDefaultsEnterRoom() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_EnterRoom_default_instance_;
    new (ptr) ::packet::EnterRoom();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::EnterRoom::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnterRoom =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnterRoom}, {}};

static void InitDefaultsLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_LoginReq_default_instance_;
    new (ptr) ::packet::LoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::LoginReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginReq}, {}};

static void InitDefaultsLoginAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_LoginAck_default_instance_;
    new (ptr) ::packet::LoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::LoginAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LoginAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLoginAck}, {
      &protobuf_packet_5fdata_2eproto::scc_info_RoomUser.base,}};

static void InitDefaultsLogoutAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_LogoutAck_default_instance_;
    new (ptr) ::packet::LogoutAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::LogoutAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogoutAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogoutAck}, {}};

static void InitDefaultsEnterNewUserAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_EnterNewUserAck_default_instance_;
    new (ptr) ::packet::EnterNewUserAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::EnterNewUserAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnterNewUserAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnterNewUserAck}, {
      &protobuf_packet_5fdata_2eproto::scc_info_RoomUser.base,}};

static void InitDefaultsMoveReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_MoveReq_default_instance_;
    new (ptr) ::packet::MoveReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::MoveReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoveReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoveReq}, {
      &protobuf_packet_5fdata_2eproto::scc_info_Vector3.base,}};

static void InitDefaultsMoveAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_MoveAck_default_instance_;
    new (ptr) ::packet::MoveAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::MoveAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoveAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoveAck}, {
      &protobuf_packet_5fdata_2eproto::scc_info_Vector3.base,}};

static void InitDefaultsGetRoomListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_GetRoomListReq_default_instance_;
    new (ptr) ::packet::GetRoomListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::GetRoomListReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRoomListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRoomListReq}, {}};

static void InitDefaultsGetRoomListAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_GetRoomListAck_default_instance_;
    new (ptr) ::packet::GetRoomListAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::GetRoomListAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetRoomListAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetRoomListAck}, {
      &protobuf_packet_5fdata_2eproto::scc_info_Room.base,}};

static void InitDefaultsMakeRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_MakeRoomReq_default_instance_;
    new (ptr) ::packet::MakeRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::MakeRoomReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MakeRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMakeRoomReq}, {}};

static void InitDefaultsMakeRoomAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_MakeRoomAck_default_instance_;
    new (ptr) ::packet::MakeRoomAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::MakeRoomAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MakeRoomAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMakeRoomAck}, {
      &protobuf_packet_5fdata_2eproto::scc_info_RoomUser.base,}};

static void InitDefaultsEnterRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_EnterRoomReq_default_instance_;
    new (ptr) ::packet::EnterRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::EnterRoomReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnterRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnterRoomReq}, {}};

static void InitDefaultsEnterRoomAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_EnterRoomAck_default_instance_;
    new (ptr) ::packet::EnterRoomAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::EnterRoomAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnterRoomAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnterRoomAck}, {
      &protobuf_packet_5fdata_2eproto::scc_info_Room.base,}};

static void InitDefaultsRenameRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_RenameRoomReq_default_instance_;
    new (ptr) ::packet::RenameRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::RenameRoomReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RenameRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRenameRoomReq}, {}};

static void InitDefaultsMoveRoomUserReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_MoveRoomUserReq_default_instance_;
    new (ptr) ::packet::MoveRoomUserReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::MoveRoomUserReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoveRoomUserReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoveRoomUserReq}, {
      &protobuf_packet_5fdata_2eproto::scc_info_Vector3.base,}};

static void InitDefaultsMoveRoomUserAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_MoveRoomUserAck_default_instance_;
    new (ptr) ::packet::MoveRoomUserAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::MoveRoomUserAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MoveRoomUserAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMoveRoomUserAck}, {
      &protobuf_packet_5fdata_2eproto::scc_info_Vector3.base,}};

static void InitDefaultsExitRoomUserReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_ExitRoomUserReq_default_instance_;
    new (ptr) ::packet::ExitRoomUserReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::ExitRoomUserReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExitRoomUserReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExitRoomUserReq}, {}};

static void InitDefaultsExitRoomUserAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_ExitRoomUserAck_default_instance_;
    new (ptr) ::packet::ExitRoomUserAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::ExitRoomUserAck::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ExitRoomUserAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExitRoomUserAck}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Connect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Disconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnterRoom.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogoutAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnterNewUserAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRoomListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRoomListAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MakeRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MakeRoomAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnterRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnterRoomAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RenameRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveRoomUserReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoveRoomUserAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExitRoomUserReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExitRoomUserAck.base);
}

::google::protobuf::Metadata file_level_metadata[21];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::ErrorAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::ErrorAck, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Connect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Connect, network_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Disconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Disconnect, network_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterRoom, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterRoom, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterRoom, room_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginReq, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginReq, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginAck, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginAck, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LoginAck, users_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LogoutAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::LogoutAck, network_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterNewUserAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterNewUserAck, new_user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterNewUserAck, new_user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveReq, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveAck, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveAck, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::GetRoomListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::GetRoomListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::GetRoomListAck, rooms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MakeRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MakeRoomReq, room_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MakeRoomReq, max_user_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MakeRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MakeRoomAck, room_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MakeRoomAck, max_user_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MakeRoomAck, master_user_network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MakeRoomAck, users_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterRoomReq, room_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterRoomAck, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::EnterRoomAck, room_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RenameRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RenameRoomReq, new_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveRoomUserReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveRoomUserReq, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveRoomUserReq, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveRoomUserAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveRoomUserAck, network_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::MoveRoomUserAck, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::ExitRoomUserReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::ExitRoomUserReq, network_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::ExitRoomUserAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::ExitRoomUserAck, network_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::packet::ErrorAck)},
  { 6, -1, sizeof(::packet::Connect)},
  { 12, -1, sizeof(::packet::Disconnect)},
  { 18, -1, sizeof(::packet::EnterRoom)},
  { 25, -1, sizeof(::packet::LoginReq)},
  { 32, -1, sizeof(::packet::LoginAck)},
  { 40, -1, sizeof(::packet::LogoutAck)},
  { 46, -1, sizeof(::packet::EnterNewUserAck)},
  { 53, -1, sizeof(::packet::MoveReq)},
  { 59, -1, sizeof(::packet::MoveAck)},
  { 66, -1, sizeof(::packet::GetRoomListReq)},
  { 71, -1, sizeof(::packet::GetRoomListAck)},
  { 77, -1, sizeof(::packet::MakeRoomReq)},
  { 84, -1, sizeof(::packet::MakeRoomAck)},
  { 93, -1, sizeof(::packet::EnterRoomReq)},
  { 99, -1, sizeof(::packet::EnterRoomAck)},
  { 106, -1, sizeof(::packet::RenameRoomReq)},
  { 112, -1, sizeof(::packet::MoveRoomUserReq)},
  { 119, -1, sizeof(::packet::MoveRoomUserAck)},
  { 126, -1, sizeof(::packet::ExitRoomUserReq)},
  { 132, -1, sizeof(::packet::ExitRoomUserAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_ErrorAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_Connect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_Disconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_EnterRoom_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_LoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_LoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_LogoutAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_EnterNewUserAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_MoveReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_MoveAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_GetRoomListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_GetRoomListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_MakeRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_MakeRoomAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_EnterRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_EnterRoomAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_RenameRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_MoveRoomUserReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_MoveRoomUserAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_ExitRoomUserReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_ExitRoomUserAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "packet.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014packet.proto\022\006packet\032\021packet_type.prot"
      "o\032\021packet_data.proto\"&\n\010ErrorAck\022\032\n\004type"
      "\030\001 \001(\0162\014.packet.Type\"\035\n\007Connect\022\022\n\nnetwo"
      "rk_id\030\001 \001(\003\" \n\nDisconnect\022\022\n\nnetwork_id\030"
      "\001 \001(\003\"0\n\tEnterRoom\022\022\n\nnetwork_id\030\001 \001(\003\022\017"
      "\n\007room_id\030\002 \001(\003\",\n\010LoginReq\022\022\n\nnetwork_i"
      "d\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\"M\n\010LoginAck\022\022\n\nnet"
      "work_id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\037\n\005users\030\003 \003"
      "(\0132\020.packet.RoomUser\"\037\n\tLogoutAck\022\022\n\nnet"
      "work_id\030\001 \001(\003\"L\n\017EnterNewUserAck\022\025\n\rnew_"
      "user_name\030\001 \001(\t\022\"\n\010new_user\030\002 \001(\0132\020.pack"
      "et.RoomUser\",\n\007MoveReq\022!\n\010position\030\001 \001(\013"
      "2\017.packet.Vector3\"@\n\007MoveAck\022\022\n\nnetwork_"
      "id\030\001 \001(\003\022!\n\010position\030\002 \001(\0132\017.packet.Vect"
      "or3\"\020\n\016GetRoomListReq\"-\n\016GetRoomListAck\022"
      "\033\n\005rooms\030\001 \003(\0132\014.packet.Room\"8\n\013MakeRoom"
      "Req\022\021\n\troom_name\030\001 \001(\t\022\026\n\016max_user_count"
      "\030\002 \001(\005\"y\n\013MakeRoomAck\022\021\n\troom_name\030\001 \001(\t"
      "\022\026\n\016max_user_count\030\002 \001(\005\022\036\n\026master_user_"
      "network_id\030\003 \001(\003\022\037\n\005users\030\004 \003(\0132\020.packet"
      ".RoomUser\"\037\n\014EnterRoomReq\022\017\n\007room_id\030\001 \001"
      "(\003\";\n\014EnterRoomAck\022\017\n\007room_id\030\001 \001(\003\022\032\n\004r"
      "oom\030\002 \001(\0132\014.packet.Room\"!\n\rRenameRoomReq"
      "\022\020\n\010new_name\030\001 \001(\t\"H\n\017MoveRoomUserReq\022\022\n"
      "\nnetwork_id\030\001 \001(\003\022!\n\010position\030\002 \001(\0132\017.pa"
      "cket.Vector3\"H\n\017MoveRoomUserAck\022\022\n\nnetwo"
      "rk_id\030\001 \001(\003\022!\n\010position\030\002 \001(\0132\017.packet.V"
      "ector3\"%\n\017ExitRoomUserReq\022\022\n\nnetwork_id\030"
      "\001 \001(\003\"%\n\017ExitRoomUserAck\022\022\n\nnetwork_id\030\001"
      " \001(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1172);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "packet.proto", &protobuf_RegisterTypes);
  ::protobuf_packet_5ftype_2eproto::AddDescriptors();
  ::protobuf_packet_5fdata_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_packet_2eproto
namespace packet {

// ===================================================================

void ErrorAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorAck::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorAck::ErrorAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_ErrorAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.ErrorAck)
}
ErrorAck::ErrorAck(const ErrorAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:packet.ErrorAck)
}

void ErrorAck::SharedCtor() {
  type_ = 0;
}

ErrorAck::~ErrorAck() {
  // @@protoc_insertion_point(destructor:packet.ErrorAck)
  SharedDtor();
}

void ErrorAck::SharedDtor() {
}

void ErrorAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ErrorAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ErrorAck& ErrorAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_ErrorAck.base);
  return *internal_default_instance();
}


void ErrorAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.ErrorAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  _internal_metadata_.Clear();
}

bool ErrorAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.ErrorAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .packet.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::packet::Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.ErrorAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.ErrorAck)
  return false;
#undef DO_
}

void ErrorAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.ErrorAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.ErrorAck)
}

::google::protobuf::uint8* ErrorAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.ErrorAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.ErrorAck)
  return target;
}

size_t ErrorAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.ErrorAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.ErrorAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.ErrorAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.ErrorAck)
    MergeFrom(*source);
  }
}

void ErrorAck::MergeFrom(const ErrorAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.ErrorAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ErrorAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.ErrorAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorAck::CopyFrom(const ErrorAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.ErrorAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorAck::IsInitialized() const {
  return true;
}

void ErrorAck::Swap(ErrorAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorAck::InternalSwap(ErrorAck* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ErrorAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Connect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Connect::kNetworkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Connect::Connect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_Connect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.Connect)
}
Connect::Connect(const Connect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.Connect)
}

void Connect::SharedCtor() {
  network_id_ = GOOGLE_LONGLONG(0);
}

Connect::~Connect() {
  // @@protoc_insertion_point(destructor:packet.Connect)
  SharedDtor();
}

void Connect::SharedDtor() {
}

void Connect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Connect::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Connect& Connect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_Connect.base);
  return *internal_default_instance();
}


void Connect::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Connect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.Connect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.Connect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.Connect)
  return false;
#undef DO_
}

void Connect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.Connect)
}

::google::protobuf::uint8* Connect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.Connect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Connect)
  return target;
}

size_t Connect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Connect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Connect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.Connect)
  GOOGLE_DCHECK_NE(&from, this);
  const Connect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Connect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.Connect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.Connect)
    MergeFrom(*source);
  }
}

void Connect::MergeFrom(const Connect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Connect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void Connect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Connect::CopyFrom(const Connect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Connect::IsInitialized() const {
  return true;
}

void Connect::Swap(Connect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Connect::InternalSwap(Connect* other) {
  using std::swap;
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Connect::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Disconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Disconnect::kNetworkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Disconnect::Disconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_Disconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.Disconnect)
}
Disconnect::Disconnect(const Disconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.Disconnect)
}

void Disconnect::SharedCtor() {
  network_id_ = GOOGLE_LONGLONG(0);
}

Disconnect::~Disconnect() {
  // @@protoc_insertion_point(destructor:packet.Disconnect)
  SharedDtor();
}

void Disconnect::SharedDtor() {
}

void Disconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Disconnect::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Disconnect& Disconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_Disconnect.base);
  return *internal_default_instance();
}


void Disconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Disconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.Disconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.Disconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.Disconnect)
  return false;
#undef DO_
}

void Disconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.Disconnect)
}

::google::protobuf::uint8* Disconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Disconnect)
  return target;
}

size_t Disconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Disconnect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Disconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const Disconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Disconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.Disconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.Disconnect)
    MergeFrom(*source);
  }
}

void Disconnect::MergeFrom(const Disconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void Disconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Disconnect::CopyFrom(const Disconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Disconnect::IsInitialized() const {
  return true;
}

void Disconnect::Swap(Disconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Disconnect::InternalSwap(Disconnect* other) {
  using std::swap;
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Disconnect::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterRoom::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoom::kNetworkIdFieldNumber;
const int EnterRoom::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoom::EnterRoom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_EnterRoom.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.EnterRoom)
}
EnterRoom::EnterRoom(const EnterRoom& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&network_id_, &from.network_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&network_id_)) + sizeof(room_id_));
  // @@protoc_insertion_point(copy_constructor:packet.EnterRoom)
}

void EnterRoom::SharedCtor() {
  ::memset(&network_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&network_id_)) + sizeof(room_id_));
}

EnterRoom::~EnterRoom() {
  // @@protoc_insertion_point(destructor:packet.EnterRoom)
  SharedDtor();
}

void EnterRoom::SharedDtor() {
}

void EnterRoom::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnterRoom::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterRoom& EnterRoom::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_EnterRoom.base);
  return *internal_default_instance();
}


void EnterRoom::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.EnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&network_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&network_id_)) + sizeof(room_id_));
  _internal_metadata_.Clear();
}

bool EnterRoom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.EnterRoom)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 room_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.EnterRoom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.EnterRoom)
  return false;
#undef DO_
}

void EnterRoom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.EnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // int64 room_id = 2;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->room_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.EnterRoom)
}

::google::protobuf::uint8* EnterRoom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.EnterRoom)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // int64 room_id = 2;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->room_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.EnterRoom)
  return target;
}

size_t EnterRoom::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.EnterRoom)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  // int64 room_id = 2;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnterRoom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.EnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoom* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.EnterRoom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.EnterRoom)
    MergeFrom(*source);
  }
}

void EnterRoom::MergeFrom(const EnterRoom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.EnterRoom)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void EnterRoom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.EnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoom::CopyFrom(const EnterRoom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.EnterRoom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoom::IsInitialized() const {
  return true;
}

void EnterRoom::Swap(EnterRoom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoom::InternalSwap(EnterRoom* other) {
  using std::swap;
  swap(network_id_, other->network_id_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnterRoom::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kNetworkIdFieldNumber;
const int LoginReq::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_LoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.LoginReq)
}
LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.LoginReq)
}

void LoginReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_id_ = GOOGLE_LONGLONG(0);
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:packet.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReq& LoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_LoginReq.base);
  return *internal_default_instance();
}


void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.LoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.LoginReq.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.LoginReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.LoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.LoginReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.LoginReq)
  return target;
}

size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.LoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginAck::InitAsDefaultInstance() {
}
void LoginAck::clear_users() {
  users_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginAck::kNetworkIdFieldNumber;
const int LoginAck::kNameFieldNumber;
const int LoginAck::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginAck::LoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_LoginAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.LoginAck)
}
LoginAck::LoginAck(const LoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.LoginAck)
}

void LoginAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_id_ = GOOGLE_LONGLONG(0);
}

LoginAck::~LoginAck() {
  // @@protoc_insertion_point(destructor:packet.LoginAck)
  SharedDtor();
}

void LoginAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoginAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginAck& LoginAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_LoginAck.base);
  return *internal_default_instance();
}


void LoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.LoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.LoginAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.LoginAck.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .packet.RoomUser users = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.LoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.LoginAck)
  return false;
#undef DO_
}

void LoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.LoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.LoginAck.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .packet.RoomUser users = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->users(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.LoginAck)
}

::google::protobuf::uint8* LoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.LoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.LoginAck.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .packet.RoomUser users = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->users(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.LoginAck)
  return target;
}

size_t LoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.LoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .packet.RoomUser users = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.LoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.LoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.LoginAck)
    MergeFrom(*source);
  }
}

void LoginAck::MergeFrom(const LoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.LoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void LoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.LoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginAck::CopyFrom(const LoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.LoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginAck::IsInitialized() const {
  return true;
}

void LoginAck::Swap(LoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginAck::InternalSwap(LoginAck* other) {
  using std::swap;
  CastToBase(&users_)->InternalSwap(CastToBase(&other->users_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoginAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogoutAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutAck::kNetworkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutAck::LogoutAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_LogoutAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.LogoutAck)
}
LogoutAck::LogoutAck(const LogoutAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.LogoutAck)
}

void LogoutAck::SharedCtor() {
  network_id_ = GOOGLE_LONGLONG(0);
}

LogoutAck::~LogoutAck() {
  // @@protoc_insertion_point(destructor:packet.LogoutAck)
  SharedDtor();
}

void LogoutAck::SharedDtor() {
}

void LogoutAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogoutAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogoutAck& LogoutAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_LogoutAck.base);
  return *internal_default_instance();
}


void LogoutAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.LogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool LogoutAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.LogoutAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.LogoutAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.LogoutAck)
  return false;
#undef DO_
}

void LogoutAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.LogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.LogoutAck)
}

::google::protobuf::uint8* LogoutAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.LogoutAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.LogoutAck)
  return target;
}

size_t LogoutAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.LogoutAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogoutAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.LogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.LogoutAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.LogoutAck)
    MergeFrom(*source);
  }
}

void LogoutAck::MergeFrom(const LogoutAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.LogoutAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void LogoutAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.LogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutAck::CopyFrom(const LogoutAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.LogoutAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutAck::IsInitialized() const {
  return true;
}

void LogoutAck::Swap(LogoutAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutAck::InternalSwap(LogoutAck* other) {
  using std::swap;
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogoutAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterNewUserAck::InitAsDefaultInstance() {
  ::packet::_EnterNewUserAck_default_instance_._instance.get_mutable()->new_user_ = const_cast< ::packet::RoomUser*>(
      ::packet::RoomUser::internal_default_instance());
}
void EnterNewUserAck::clear_new_user() {
  if (GetArenaNoVirtual() == NULL && new_user_ != NULL) {
    delete new_user_;
  }
  new_user_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterNewUserAck::kNewUserNameFieldNumber;
const int EnterNewUserAck::kNewUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterNewUserAck::EnterNewUserAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_EnterNewUserAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.EnterNewUserAck)
}
EnterNewUserAck::EnterNewUserAck(const EnterNewUserAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_user_name().size() > 0) {
    new_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_user_name_);
  }
  if (from.has_new_user()) {
    new_user_ = new ::packet::RoomUser(*from.new_user_);
  } else {
    new_user_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:packet.EnterNewUserAck)
}

void EnterNewUserAck::SharedCtor() {
  new_user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_user_ = NULL;
}

EnterNewUserAck::~EnterNewUserAck() {
  // @@protoc_insertion_point(destructor:packet.EnterNewUserAck)
  SharedDtor();
}

void EnterNewUserAck::SharedDtor() {
  new_user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete new_user_;
}

void EnterNewUserAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnterNewUserAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterNewUserAck& EnterNewUserAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_EnterNewUserAck.base);
  return *internal_default_instance();
}


void EnterNewUserAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.EnterNewUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && new_user_ != NULL) {
    delete new_user_;
  }
  new_user_ = NULL;
  _internal_metadata_.Clear();
}

bool EnterNewUserAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.EnterNewUserAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string new_user_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_user_name().data(), static_cast<int>(this->new_user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.EnterNewUserAck.new_user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .packet.RoomUser new_user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.EnterNewUserAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.EnterNewUserAck)
  return false;
#undef DO_
}

void EnterNewUserAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.EnterNewUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string new_user_name = 1;
  if (this->new_user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_user_name().data(), static_cast<int>(this->new_user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.EnterNewUserAck.new_user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->new_user_name(), output);
  }

  // .packet.RoomUser new_user = 2;
  if (this->has_new_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_new_user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.EnterNewUserAck)
}

::google::protobuf::uint8* EnterNewUserAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.EnterNewUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string new_user_name = 1;
  if (this->new_user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_user_name().data(), static_cast<int>(this->new_user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.EnterNewUserAck.new_user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->new_user_name(), target);
  }

  // .packet.RoomUser new_user = 2;
  if (this->has_new_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_new_user(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.EnterNewUserAck)
  return target;
}

size_t EnterNewUserAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.EnterNewUserAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string new_user_name = 1;
  if (this->new_user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_user_name());
  }

  // .packet.RoomUser new_user = 2;
  if (this->has_new_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *new_user_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnterNewUserAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.EnterNewUserAck)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterNewUserAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterNewUserAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.EnterNewUserAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.EnterNewUserAck)
    MergeFrom(*source);
  }
}

void EnterNewUserAck::MergeFrom(const EnterNewUserAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.EnterNewUserAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_user_name().size() > 0) {

    new_user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_user_name_);
  }
  if (from.has_new_user()) {
    mutable_new_user()->::packet::RoomUser::MergeFrom(from.new_user());
  }
}

void EnterNewUserAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.EnterNewUserAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterNewUserAck::CopyFrom(const EnterNewUserAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.EnterNewUserAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterNewUserAck::IsInitialized() const {
  return true;
}

void EnterNewUserAck::Swap(EnterNewUserAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterNewUserAck::InternalSwap(EnterNewUserAck* other) {
  using std::swap;
  new_user_name_.Swap(&other->new_user_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(new_user_, other->new_user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnterNewUserAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveReq::InitAsDefaultInstance() {
  ::packet::_MoveReq_default_instance_._instance.get_mutable()->position_ = const_cast< ::packet::Vector3*>(
      ::packet::Vector3::internal_default_instance());
}
void MoveReq::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveReq::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveReq::MoveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_MoveReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.MoveReq)
}
MoveReq::MoveReq(const MoveReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::packet::Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:packet.MoveReq)
}

void MoveReq::SharedCtor() {
  position_ = NULL;
}

MoveReq::~MoveReq() {
  // @@protoc_insertion_point(destructor:packet.MoveReq)
  SharedDtor();
}

void MoveReq::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void MoveReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoveReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveReq& MoveReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_MoveReq.base);
  return *internal_default_instance();
}


void MoveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.MoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  _internal_metadata_.Clear();
}

bool MoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.MoveReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .packet.Vector3 position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.MoveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.MoveReq)
  return false;
#undef DO_
}

void MoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.MoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.Vector3 position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.MoveReq)
}

::google::protobuf::uint8* MoveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.MoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .packet.Vector3 position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.MoveReq)
  return target;
}

size_t MoveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.MoveReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Vector3 position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.MoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.MoveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.MoveReq)
    MergeFrom(*source);
  }
}

void MoveReq::MergeFrom(const MoveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.MoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::packet::Vector3::MergeFrom(from.position());
  }
}

void MoveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.MoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveReq::CopyFrom(const MoveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.MoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveReq::IsInitialized() const {
  return true;
}

void MoveReq::Swap(MoveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveReq::InternalSwap(MoveReq* other) {
  using std::swap;
  swap(position_, other->position_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoveReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveAck::InitAsDefaultInstance() {
  ::packet::_MoveAck_default_instance_._instance.get_mutable()->position_ = const_cast< ::packet::Vector3*>(
      ::packet::Vector3::internal_default_instance());
}
void MoveAck::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveAck::kNetworkIdFieldNumber;
const int MoveAck::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveAck::MoveAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_MoveAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.MoveAck)
}
MoveAck::MoveAck(const MoveAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::packet::Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.MoveAck)
}

void MoveAck::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(network_id_));
}

MoveAck::~MoveAck() {
  // @@protoc_insertion_point(destructor:packet.MoveAck)
  SharedDtor();
}

void MoveAck::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void MoveAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoveAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveAck& MoveAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_MoveAck.base);
  return *internal_default_instance();
}


void MoveAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.MoveAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MoveAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.MoveAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .packet.Vector3 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.MoveAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.MoveAck)
  return false;
#undef DO_
}

void MoveAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.MoveAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.MoveAck)
}

::google::protobuf::uint8* MoveAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.MoveAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.MoveAck)
  return target;
}

size_t MoveAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.MoveAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.MoveAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.MoveAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.MoveAck)
    MergeFrom(*source);
  }
}

void MoveAck::MergeFrom(const MoveAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.MoveAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::packet::Vector3::MergeFrom(from.position());
  }
  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void MoveAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.MoveAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveAck::CopyFrom(const MoveAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.MoveAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveAck::IsInitialized() const {
  return true;
}

void MoveAck::Swap(MoveAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveAck::InternalSwap(MoveAck* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoveAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRoomListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRoomListReq::GetRoomListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_GetRoomListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.GetRoomListReq)
}
GetRoomListReq::GetRoomListReq(const GetRoomListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:packet.GetRoomListReq)
}

void GetRoomListReq::SharedCtor() {
}

GetRoomListReq::~GetRoomListReq() {
  // @@protoc_insertion_point(destructor:packet.GetRoomListReq)
  SharedDtor();
}

void GetRoomListReq::SharedDtor() {
}

void GetRoomListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRoomListReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRoomListReq& GetRoomListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_GetRoomListReq.base);
  return *internal_default_instance();
}


void GetRoomListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.GetRoomListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetRoomListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.GetRoomListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:packet.GetRoomListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.GetRoomListReq)
  return false;
#undef DO_
}

void GetRoomListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.GetRoomListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.GetRoomListReq)
}

::google::protobuf::uint8* GetRoomListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.GetRoomListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.GetRoomListReq)
  return target;
}

size_t GetRoomListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.GetRoomListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRoomListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.GetRoomListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRoomListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRoomListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.GetRoomListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.GetRoomListReq)
    MergeFrom(*source);
  }
}

void GetRoomListReq::MergeFrom(const GetRoomListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.GetRoomListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetRoomListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.GetRoomListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRoomListReq::CopyFrom(const GetRoomListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.GetRoomListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoomListReq::IsInitialized() const {
  return true;
}

void GetRoomListReq::Swap(GetRoomListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRoomListReq::InternalSwap(GetRoomListReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRoomListReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRoomListAck::InitAsDefaultInstance() {
}
void GetRoomListAck::clear_rooms() {
  rooms_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRoomListAck::kRoomsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRoomListAck::GetRoomListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_GetRoomListAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.GetRoomListAck)
}
GetRoomListAck::GetRoomListAck(const GetRoomListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rooms_(from.rooms_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:packet.GetRoomListAck)
}

void GetRoomListAck::SharedCtor() {
}

GetRoomListAck::~GetRoomListAck() {
  // @@protoc_insertion_point(destructor:packet.GetRoomListAck)
  SharedDtor();
}

void GetRoomListAck::SharedDtor() {
}

void GetRoomListAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRoomListAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRoomListAck& GetRoomListAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_GetRoomListAck.base);
  return *internal_default_instance();
}


void GetRoomListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.GetRoomListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rooms_.Clear();
  _internal_metadata_.Clear();
}

bool GetRoomListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.GetRoomListAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .packet.Room rooms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rooms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.GetRoomListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.GetRoomListAck)
  return false;
#undef DO_
}

void GetRoomListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.GetRoomListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .packet.Room rooms = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rooms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rooms(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.GetRoomListAck)
}

::google::protobuf::uint8* GetRoomListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.GetRoomListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .packet.Room rooms = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rooms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rooms(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.GetRoomListAck)
  return target;
}

size_t GetRoomListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.GetRoomListAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .packet.Room rooms = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rooms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rooms(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRoomListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.GetRoomListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRoomListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRoomListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.GetRoomListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.GetRoomListAck)
    MergeFrom(*source);
  }
}

void GetRoomListAck::MergeFrom(const GetRoomListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.GetRoomListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rooms_.MergeFrom(from.rooms_);
}

void GetRoomListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.GetRoomListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRoomListAck::CopyFrom(const GetRoomListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.GetRoomListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRoomListAck::IsInitialized() const {
  return true;
}

void GetRoomListAck::Swap(GetRoomListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRoomListAck::InternalSwap(GetRoomListAck* other) {
  using std::swap;
  CastToBase(&rooms_)->InternalSwap(CastToBase(&other->rooms_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRoomListAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MakeRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MakeRoomReq::kRoomNameFieldNumber;
const int MakeRoomReq::kMaxUserCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MakeRoomReq::MakeRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_MakeRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.MakeRoomReq)
}
MakeRoomReq::MakeRoomReq(const MakeRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_name().size() > 0) {
    room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_name_);
  }
  max_user_count_ = from.max_user_count_;
  // @@protoc_insertion_point(copy_constructor:packet.MakeRoomReq)
}

void MakeRoomReq::SharedCtor() {
  room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_user_count_ = 0;
}

MakeRoomReq::~MakeRoomReq() {
  // @@protoc_insertion_point(destructor:packet.MakeRoomReq)
  SharedDtor();
}

void MakeRoomReq::SharedDtor() {
  room_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MakeRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MakeRoomReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MakeRoomReq& MakeRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_MakeRoomReq.base);
  return *internal_default_instance();
}


void MakeRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.MakeRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  room_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  max_user_count_ = 0;
  _internal_metadata_.Clear();
}

bool MakeRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.MakeRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string room_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_name().data(), static_cast<int>(this->room_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.MakeRoomReq.room_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_user_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_user_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.MakeRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.MakeRoomReq)
  return false;
#undef DO_
}

void MakeRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.MakeRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string room_name = 1;
  if (this->room_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_name().data(), static_cast<int>(this->room_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.MakeRoomReq.room_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->room_name(), output);
  }

  // int32 max_user_count = 2;
  if (this->max_user_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_user_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.MakeRoomReq)
}

::google::protobuf::uint8* MakeRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.MakeRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string room_name = 1;
  if (this->room_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_name().data(), static_cast<int>(this->room_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.MakeRoomReq.room_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->room_name(), target);
  }

  // int32 max_user_count = 2;
  if (this->max_user_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_user_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.MakeRoomReq)
  return target;
}

size_t MakeRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.MakeRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string room_name = 1;
  if (this->room_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_name());
  }

  // int32 max_user_count = 2;
  if (this->max_user_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_user_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MakeRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.MakeRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MakeRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MakeRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.MakeRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.MakeRoomReq)
    MergeFrom(*source);
  }
}

void MakeRoomReq::MergeFrom(const MakeRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.MakeRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.room_name().size() > 0) {

    room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_name_);
  }
  if (from.max_user_count() != 0) {
    set_max_user_count(from.max_user_count());
  }
}

void MakeRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.MakeRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MakeRoomReq::CopyFrom(const MakeRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.MakeRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeRoomReq::IsInitialized() const {
  return true;
}

void MakeRoomReq::Swap(MakeRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MakeRoomReq::InternalSwap(MakeRoomReq* other) {
  using std::swap;
  room_name_.Swap(&other->room_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(max_user_count_, other->max_user_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MakeRoomReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MakeRoomAck::InitAsDefaultInstance() {
}
void MakeRoomAck::clear_users() {
  users_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MakeRoomAck::kRoomNameFieldNumber;
const int MakeRoomAck::kMaxUserCountFieldNumber;
const int MakeRoomAck::kMasterUserNetworkIdFieldNumber;
const int MakeRoomAck::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MakeRoomAck::MakeRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_MakeRoomAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.MakeRoomAck)
}
MakeRoomAck::MakeRoomAck(const MakeRoomAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.room_name().size() > 0) {
    room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_name_);
  }
  ::memcpy(&master_user_network_id_, &from.master_user_network_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_user_count_) -
    reinterpret_cast<char*>(&master_user_network_id_)) + sizeof(max_user_count_));
  // @@protoc_insertion_point(copy_constructor:packet.MakeRoomAck)
}

void MakeRoomAck::SharedCtor() {
  room_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&master_user_network_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_user_count_) -
      reinterpret_cast<char*>(&master_user_network_id_)) + sizeof(max_user_count_));
}

MakeRoomAck::~MakeRoomAck() {
  // @@protoc_insertion_point(destructor:packet.MakeRoomAck)
  SharedDtor();
}

void MakeRoomAck::SharedDtor() {
  room_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MakeRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MakeRoomAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MakeRoomAck& MakeRoomAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_MakeRoomAck.base);
  return *internal_default_instance();
}


void MakeRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.MakeRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  room_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&master_user_network_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_user_count_) -
      reinterpret_cast<char*>(&master_user_network_id_)) + sizeof(max_user_count_));
  _internal_metadata_.Clear();
}

bool MakeRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.MakeRoomAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string room_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->room_name().data(), static_cast<int>(this->room_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.MakeRoomAck.room_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 max_user_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_user_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 master_user_network_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &master_user_network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .packet.RoomUser users = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.MakeRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.MakeRoomAck)
  return false;
#undef DO_
}

void MakeRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.MakeRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string room_name = 1;
  if (this->room_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_name().data(), static_cast<int>(this->room_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.MakeRoomAck.room_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->room_name(), output);
  }

  // int32 max_user_count = 2;
  if (this->max_user_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_user_count(), output);
  }

  // int64 master_user_network_id = 3;
  if (this->master_user_network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->master_user_network_id(), output);
  }

  // repeated .packet.RoomUser users = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->users(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.MakeRoomAck)
}

::google::protobuf::uint8* MakeRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.MakeRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string room_name = 1;
  if (this->room_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->room_name().data(), static_cast<int>(this->room_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.MakeRoomAck.room_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->room_name(), target);
  }

  // int32 max_user_count = 2;
  if (this->max_user_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_user_count(), target);
  }

  // int64 master_user_network_id = 3;
  if (this->master_user_network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->master_user_network_id(), target);
  }

  // repeated .packet.RoomUser users = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->users_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->users(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.MakeRoomAck)
  return target;
}

size_t MakeRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.MakeRoomAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .packet.RoomUser users = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->users_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->users(static_cast<int>(i)));
    }
  }

  // string room_name = 1;
  if (this->room_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_name());
  }

  // int64 master_user_network_id = 3;
  if (this->master_user_network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->master_user_network_id());
  }

  // int32 max_user_count = 2;
  if (this->max_user_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_user_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MakeRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.MakeRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MakeRoomAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MakeRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.MakeRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.MakeRoomAck)
    MergeFrom(*source);
  }
}

void MakeRoomAck::MergeFrom(const MakeRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.MakeRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
  if (from.room_name().size() > 0) {

    room_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_name_);
  }
  if (from.master_user_network_id() != 0) {
    set_master_user_network_id(from.master_user_network_id());
  }
  if (from.max_user_count() != 0) {
    set_max_user_count(from.max_user_count());
  }
}

void MakeRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.MakeRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MakeRoomAck::CopyFrom(const MakeRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.MakeRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MakeRoomAck::IsInitialized() const {
  return true;
}

void MakeRoomAck::Swap(MakeRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MakeRoomAck::InternalSwap(MakeRoomAck* other) {
  using std::swap;
  CastToBase(&users_)->InternalSwap(CastToBase(&other->users_));
  room_name_.Swap(&other->room_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(master_user_network_id_, other->master_user_network_id_);
  swap(max_user_count_, other->max_user_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MakeRoomAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomReq::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomReq::EnterRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_EnterRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.EnterRoomReq)
}
EnterRoomReq::EnterRoomReq(const EnterRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  room_id_ = from.room_id_;
  // @@protoc_insertion_point(copy_constructor:packet.EnterRoomReq)
}

void EnterRoomReq::SharedCtor() {
  room_id_ = GOOGLE_LONGLONG(0);
}

EnterRoomReq::~EnterRoomReq() {
  // @@protoc_insertion_point(destructor:packet.EnterRoomReq)
  SharedDtor();
}

void EnterRoomReq::SharedDtor() {
}

void EnterRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnterRoomReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterRoomReq& EnterRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_EnterRoomReq.base);
  return *internal_default_instance();
}


void EnterRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.EnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  room_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool EnterRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.EnterRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.EnterRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.EnterRoomReq)
  return false;
#undef DO_
}

void EnterRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.EnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->room_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.EnterRoomReq)
}

::google::protobuf::uint8* EnterRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.EnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->room_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.EnterRoomReq)
  return target;
}

size_t EnterRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.EnterRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnterRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.EnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.EnterRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.EnterRoomReq)
    MergeFrom(*source);
  }
}

void EnterRoomReq::MergeFrom(const EnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.EnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void EnterRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.EnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomReq::CopyFrom(const EnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.EnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomReq::IsInitialized() const {
  return true;
}

void EnterRoomReq::Swap(EnterRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomReq::InternalSwap(EnterRoomReq* other) {
  using std::swap;
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnterRoomReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterRoomAck::InitAsDefaultInstance() {
  ::packet::_EnterRoomAck_default_instance_._instance.get_mutable()->room_ = const_cast< ::packet::Room*>(
      ::packet::Room::internal_default_instance());
}
void EnterRoomAck::clear_room() {
  if (GetArenaNoVirtual() == NULL && room_ != NULL) {
    delete room_;
  }
  room_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomAck::kRoomIdFieldNumber;
const int EnterRoomAck::kRoomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomAck::EnterRoomAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_EnterRoomAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.EnterRoomAck)
}
EnterRoomAck::EnterRoomAck(const EnterRoomAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_room()) {
    room_ = new ::packet::Room(*from.room_);
  } else {
    room_ = NULL;
  }
  room_id_ = from.room_id_;
  // @@protoc_insertion_point(copy_constructor:packet.EnterRoomAck)
}

void EnterRoomAck::SharedCtor() {
  ::memset(&room_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&room_)) + sizeof(room_id_));
}

EnterRoomAck::~EnterRoomAck() {
  // @@protoc_insertion_point(destructor:packet.EnterRoomAck)
  SharedDtor();
}

void EnterRoomAck::SharedDtor() {
  if (this != internal_default_instance()) delete room_;
}

void EnterRoomAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnterRoomAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterRoomAck& EnterRoomAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_EnterRoomAck.base);
  return *internal_default_instance();
}


void EnterRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.EnterRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && room_ != NULL) {
    delete room_;
  }
  room_ = NULL;
  room_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool EnterRoomAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.EnterRoomAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 room_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .packet.Room room = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_room()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.EnterRoomAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.EnterRoomAck)
  return false;
#undef DO_
}

void EnterRoomAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.EnterRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 room_id = 1;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->room_id(), output);
  }

  // .packet.Room room = 2;
  if (this->has_room()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_room(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.EnterRoomAck)
}

::google::protobuf::uint8* EnterRoomAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.EnterRoomAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 room_id = 1;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->room_id(), target);
  }

  // .packet.Room room = 2;
  if (this->has_room()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_room(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.EnterRoomAck)
  return target;
}

size_t EnterRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.EnterRoomAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Room room = 2;
  if (this->has_room()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *room_);
  }

  // int64 room_id = 1;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnterRoomAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.EnterRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoomAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.EnterRoomAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.EnterRoomAck)
    MergeFrom(*source);
  }
}

void EnterRoomAck::MergeFrom(const EnterRoomAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.EnterRoomAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_room()) {
    mutable_room()->::packet::Room::MergeFrom(from.room());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void EnterRoomAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.EnterRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomAck::CopyFrom(const EnterRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.EnterRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomAck::IsInitialized() const {
  return true;
}

void EnterRoomAck::Swap(EnterRoomAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomAck::InternalSwap(EnterRoomAck* other) {
  using std::swap;
  swap(room_, other->room_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnterRoomAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RenameRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameRoomReq::kNewNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameRoomReq::RenameRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_RenameRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.RenameRoomReq)
}
RenameRoomReq::RenameRoomReq(const RenameRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  new_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_name().size() > 0) {
    new_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_name_);
  }
  // @@protoc_insertion_point(copy_constructor:packet.RenameRoomReq)
}

void RenameRoomReq::SharedCtor() {
  new_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RenameRoomReq::~RenameRoomReq() {
  // @@protoc_insertion_point(destructor:packet.RenameRoomReq)
  SharedDtor();
}

void RenameRoomReq::SharedDtor() {
  new_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RenameRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RenameRoomReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RenameRoomReq& RenameRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_RenameRoomReq.base);
  return *internal_default_instance();
}


void RenameRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.RenameRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  new_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RenameRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.RenameRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string new_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_name().data(), static_cast<int>(this->new_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.RenameRoomReq.new_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.RenameRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.RenameRoomReq)
  return false;
#undef DO_
}

void RenameRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.RenameRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string new_name = 1;
  if (this->new_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_name().data(), static_cast<int>(this->new_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.RenameRoomReq.new_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->new_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.RenameRoomReq)
}

::google::protobuf::uint8* RenameRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.RenameRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string new_name = 1;
  if (this->new_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_name().data(), static_cast<int>(this->new_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.RenameRoomReq.new_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->new_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.RenameRoomReq)
  return target;
}

size_t RenameRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.RenameRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string new_name = 1;
  if (this->new_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RenameRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.RenameRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RenameRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RenameRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.RenameRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.RenameRoomReq)
    MergeFrom(*source);
  }
}

void RenameRoomReq::MergeFrom(const RenameRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.RenameRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.new_name().size() > 0) {

    new_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_name_);
  }
}

void RenameRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.RenameRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameRoomReq::CopyFrom(const RenameRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.RenameRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameRoomReq::IsInitialized() const {
  return true;
}

void RenameRoomReq::Swap(RenameRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameRoomReq::InternalSwap(RenameRoomReq* other) {
  using std::swap;
  new_name_.Swap(&other->new_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RenameRoomReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveRoomUserReq::InitAsDefaultInstance() {
  ::packet::_MoveRoomUserReq_default_instance_._instance.get_mutable()->position_ = const_cast< ::packet::Vector3*>(
      ::packet::Vector3::internal_default_instance());
}
void MoveRoomUserReq::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveRoomUserReq::kNetworkIdFieldNumber;
const int MoveRoomUserReq::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveRoomUserReq::MoveRoomUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_MoveRoomUserReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.MoveRoomUserReq)
}
MoveRoomUserReq::MoveRoomUserReq(const MoveRoomUserReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::packet::Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.MoveRoomUserReq)
}

void MoveRoomUserReq::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(network_id_));
}

MoveRoomUserReq::~MoveRoomUserReq() {
  // @@protoc_insertion_point(destructor:packet.MoveRoomUserReq)
  SharedDtor();
}

void MoveRoomUserReq::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void MoveRoomUserReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoveRoomUserReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveRoomUserReq& MoveRoomUserReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_MoveRoomUserReq.base);
  return *internal_default_instance();
}


void MoveRoomUserReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.MoveRoomUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MoveRoomUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.MoveRoomUserReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .packet.Vector3 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.MoveRoomUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.MoveRoomUserReq)
  return false;
#undef DO_
}

void MoveRoomUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.MoveRoomUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.MoveRoomUserReq)
}

::google::protobuf::uint8* MoveRoomUserReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.MoveRoomUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.MoveRoomUserReq)
  return target;
}

size_t MoveRoomUserReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.MoveRoomUserReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveRoomUserReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.MoveRoomUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveRoomUserReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveRoomUserReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.MoveRoomUserReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.MoveRoomUserReq)
    MergeFrom(*source);
  }
}

void MoveRoomUserReq::MergeFrom(const MoveRoomUserReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.MoveRoomUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::packet::Vector3::MergeFrom(from.position());
  }
  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void MoveRoomUserReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.MoveRoomUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveRoomUserReq::CopyFrom(const MoveRoomUserReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.MoveRoomUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveRoomUserReq::IsInitialized() const {
  return true;
}

void MoveRoomUserReq::Swap(MoveRoomUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveRoomUserReq::InternalSwap(MoveRoomUserReq* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoveRoomUserReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoveRoomUserAck::InitAsDefaultInstance() {
  ::packet::_MoveRoomUserAck_default_instance_._instance.get_mutable()->position_ = const_cast< ::packet::Vector3*>(
      ::packet::Vector3::internal_default_instance());
}
void MoveRoomUserAck::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveRoomUserAck::kNetworkIdFieldNumber;
const int MoveRoomUserAck::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveRoomUserAck::MoveRoomUserAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_MoveRoomUserAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.MoveRoomUserAck)
}
MoveRoomUserAck::MoveRoomUserAck(const MoveRoomUserAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::packet::Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.MoveRoomUserAck)
}

void MoveRoomUserAck::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&network_id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(network_id_));
}

MoveRoomUserAck::~MoveRoomUserAck() {
  // @@protoc_insertion_point(destructor:packet.MoveRoomUserAck)
  SharedDtor();
}

void MoveRoomUserAck::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void MoveRoomUserAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoveRoomUserAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoveRoomUserAck& MoveRoomUserAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_MoveRoomUserAck.base);
  return *internal_default_instance();
}


void MoveRoomUserAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.MoveRoomUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MoveRoomUserAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.MoveRoomUserAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .packet.Vector3 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.MoveRoomUserAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.MoveRoomUserAck)
  return false;
#undef DO_
}

void MoveRoomUserAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.MoveRoomUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.MoveRoomUserAck)
}

::google::protobuf::uint8* MoveRoomUserAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.MoveRoomUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.MoveRoomUserAck)
  return target;
}

size_t MoveRoomUserAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.MoveRoomUserAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .packet.Vector3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoveRoomUserAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.MoveRoomUserAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MoveRoomUserAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveRoomUserAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.MoveRoomUserAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.MoveRoomUserAck)
    MergeFrom(*source);
  }
}

void MoveRoomUserAck::MergeFrom(const MoveRoomUserAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.MoveRoomUserAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::packet::Vector3::MergeFrom(from.position());
  }
  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void MoveRoomUserAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.MoveRoomUserAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveRoomUserAck::CopyFrom(const MoveRoomUserAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.MoveRoomUserAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveRoomUserAck::IsInitialized() const {
  return true;
}

void MoveRoomUserAck::Swap(MoveRoomUserAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveRoomUserAck::InternalSwap(MoveRoomUserAck* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoveRoomUserAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExitRoomUserReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitRoomUserReq::kNetworkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitRoomUserReq::ExitRoomUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_ExitRoomUserReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.ExitRoomUserReq)
}
ExitRoomUserReq::ExitRoomUserReq(const ExitRoomUserReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.ExitRoomUserReq)
}

void ExitRoomUserReq::SharedCtor() {
  network_id_ = GOOGLE_LONGLONG(0);
}

ExitRoomUserReq::~ExitRoomUserReq() {
  // @@protoc_insertion_point(destructor:packet.ExitRoomUserReq)
  SharedDtor();
}

void ExitRoomUserReq::SharedDtor() {
}

void ExitRoomUserReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExitRoomUserReq::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitRoomUserReq& ExitRoomUserReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_ExitRoomUserReq.base);
  return *internal_default_instance();
}


void ExitRoomUserReq::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.ExitRoomUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ExitRoomUserReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.ExitRoomUserReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.ExitRoomUserReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.ExitRoomUserReq)
  return false;
#undef DO_
}

void ExitRoomUserReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.ExitRoomUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.ExitRoomUserReq)
}

::google::protobuf::uint8* ExitRoomUserReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.ExitRoomUserReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.ExitRoomUserReq)
  return target;
}

size_t ExitRoomUserReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.ExitRoomUserReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExitRoomUserReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.ExitRoomUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitRoomUserReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitRoomUserReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.ExitRoomUserReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.ExitRoomUserReq)
    MergeFrom(*source);
  }
}

void ExitRoomUserReq::MergeFrom(const ExitRoomUserReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.ExitRoomUserReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void ExitRoomUserReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.ExitRoomUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitRoomUserReq::CopyFrom(const ExitRoomUserReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.ExitRoomUserReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitRoomUserReq::IsInitialized() const {
  return true;
}

void ExitRoomUserReq::Swap(ExitRoomUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitRoomUserReq::InternalSwap(ExitRoomUserReq* other) {
  using std::swap;
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExitRoomUserReq::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExitRoomUserAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitRoomUserAck::kNetworkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitRoomUserAck::ExitRoomUserAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_packet_2eproto::scc_info_ExitRoomUserAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.ExitRoomUserAck)
}
ExitRoomUserAck::ExitRoomUserAck(const ExitRoomUserAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  network_id_ = from.network_id_;
  // @@protoc_insertion_point(copy_constructor:packet.ExitRoomUserAck)
}

void ExitRoomUserAck::SharedCtor() {
  network_id_ = GOOGLE_LONGLONG(0);
}

ExitRoomUserAck::~ExitRoomUserAck() {
  // @@protoc_insertion_point(destructor:packet.ExitRoomUserAck)
  SharedDtor();
}

void ExitRoomUserAck::SharedDtor() {
}

void ExitRoomUserAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExitRoomUserAck::descriptor() {
  ::protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitRoomUserAck& ExitRoomUserAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_packet_2eproto::scc_info_ExitRoomUserAck.base);
  return *internal_default_instance();
}


void ExitRoomUserAck::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.ExitRoomUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  network_id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ExitRoomUserAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.ExitRoomUserAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 network_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &network_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.ExitRoomUserAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.ExitRoomUserAck)
  return false;
#undef DO_
}

void ExitRoomUserAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.ExitRoomUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->network_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.ExitRoomUserAck)
}

::google::protobuf::uint8* ExitRoomUserAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.ExitRoomUserAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 network_id = 1;
  if (this->network_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->network_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.ExitRoomUserAck)
  return target;
}

size_t ExitRoomUserAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.ExitRoomUserAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 network_id = 1;
  if (this->network_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->network_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExitRoomUserAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.ExitRoomUserAck)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitRoomUserAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitRoomUserAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.ExitRoomUserAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.ExitRoomUserAck)
    MergeFrom(*source);
  }
}

void ExitRoomUserAck::MergeFrom(const ExitRoomUserAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.ExitRoomUserAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.network_id() != 0) {
    set_network_id(from.network_id());
  }
}

void ExitRoomUserAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.ExitRoomUserAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitRoomUserAck::CopyFrom(const ExitRoomUserAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.ExitRoomUserAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitRoomUserAck::IsInitialized() const {
  return true;
}

void ExitRoomUserAck::Swap(ExitRoomUserAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitRoomUserAck::InternalSwap(ExitRoomUserAck* other) {
  using std::swap;
  swap(network_id_, other->network_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExitRoomUserAck::GetMetadata() const {
  protobuf_packet_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_packet_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace packet
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::ErrorAck* Arena::CreateMaybeMessage< ::packet::ErrorAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::ErrorAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::Connect* Arena::CreateMaybeMessage< ::packet::Connect >(Arena* arena) {
  return Arena::CreateInternal< ::packet::Connect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::Disconnect* Arena::CreateMaybeMessage< ::packet::Disconnect >(Arena* arena) {
  return Arena::CreateInternal< ::packet::Disconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::EnterRoom* Arena::CreateMaybeMessage< ::packet::EnterRoom >(Arena* arena) {
  return Arena::CreateInternal< ::packet::EnterRoom >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::LoginReq* Arena::CreateMaybeMessage< ::packet::LoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::LoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::LoginAck* Arena::CreateMaybeMessage< ::packet::LoginAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::LoginAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::LogoutAck* Arena::CreateMaybeMessage< ::packet::LogoutAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::LogoutAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::EnterNewUserAck* Arena::CreateMaybeMessage< ::packet::EnterNewUserAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::EnterNewUserAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::MoveReq* Arena::CreateMaybeMessage< ::packet::MoveReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::MoveReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::MoveAck* Arena::CreateMaybeMessage< ::packet::MoveAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::MoveAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::GetRoomListReq* Arena::CreateMaybeMessage< ::packet::GetRoomListReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::GetRoomListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::GetRoomListAck* Arena::CreateMaybeMessage< ::packet::GetRoomListAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::GetRoomListAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::MakeRoomReq* Arena::CreateMaybeMessage< ::packet::MakeRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::MakeRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::MakeRoomAck* Arena::CreateMaybeMessage< ::packet::MakeRoomAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::MakeRoomAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::EnterRoomReq* Arena::CreateMaybeMessage< ::packet::EnterRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::EnterRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::EnterRoomAck* Arena::CreateMaybeMessage< ::packet::EnterRoomAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::EnterRoomAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::RenameRoomReq* Arena::CreateMaybeMessage< ::packet::RenameRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::RenameRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::MoveRoomUserReq* Arena::CreateMaybeMessage< ::packet::MoveRoomUserReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::MoveRoomUserReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::MoveRoomUserAck* Arena::CreateMaybeMessage< ::packet::MoveRoomUserAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::MoveRoomUserAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::ExitRoomUserReq* Arena::CreateMaybeMessage< ::packet::ExitRoomUserReq >(Arena* arena) {
  return Arena::CreateInternal< ::packet::ExitRoomUserReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::ExitRoomUserAck* Arena::CreateMaybeMessage< ::packet::ExitRoomUserAck >(Arena* arena) {
  return Arena::CreateInternal< ::packet::ExitRoomUserAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
